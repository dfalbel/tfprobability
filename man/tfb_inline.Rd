% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bijectors.R
\name{tfb_inline}
\alias{tfb_inline}
\title{Bijector constructed from custom callables.}
\usage{
tfb_inline(forward_fn = NULL, inverse_fn = NULL,
  inverse_log_det_jacobian_fn = NULL,
  forward_log_det_jacobian_fn = NULL, forward_event_shape_fn = NULL,
  forward_event_shape_tensor_fn = NULL, inverse_event_shape_fn = NULL,
  inverse_event_shape_tensor_fn = NULL, is_constant_jacobian = NULL,
  validate_args = FALSE, forward_min_event_ndims = NULL,
  inverse_min_event_ndims = NULL, name = "inline")
}
\arguments{
\item{forward_fn}{Function implementing the forward transformation.}

\item{inverse_fn}{Function implementing the inverse transformation.}

\item{inverse_log_det_jacobian_fn}{Function implementing the log_det_jacobian of the forward transformation.}

\item{forward_log_det_jacobian_fn}{Function implementing the log_det_jacobian of the inverse transformation.}

\item{forward_event_shape_fn}{Function implementing non-identical static event shape changes. Default: shape is assumed unchanged.}

\item{forward_event_shape_tensor_fn}{Function implementing non-identical event shape changes. Default: shape is assumed unchanged.}

\item{inverse_event_shape_fn}{Function implementing non-identical static event shape changes. Default: shape is assumed unchanged.}

\item{inverse_event_shape_tensor_fn}{Function implementing non-identical event shape changes. Default: shape is assumed unchanged.}

\item{is_constant_jacobian}{Logical indicating that the Jacobian is constant for all input arguments.}

\item{validate_args}{Logical, default `FALSE`. Whether to validate input with asserts. If `validate_args` is
`FALSE`, and the inputs are invalid, correct behavior is not guaranteed.}

\item{forward_min_event_ndims}{Integer indicating the minimal dimensionality this bijector acts on.}

\item{inverse_min_event_ndims}{Integer indicating the minimal dimensionality this bijector acts on.}

\item{name}{name prefixed to Ops created by this class.}
}
\description{
Bijector constructed from custom callables.
}
