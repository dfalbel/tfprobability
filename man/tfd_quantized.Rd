% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distributions.R
\name{tfd_quantized}
\alias{tfd_quantized}
\title{Distribution representing the quantization \code{Y = ceiling(X)}.}
\usage{
tfd_quantized(distribution, low = NULL, high = NULL,
  validate_args = FALSE, name = "QuantizedDistribution")
}
\arguments{
\item{distribution}{The base distribution class to transform. Typically an
instance of \code{Distribution}.}

\item{low}{\code{Tensor} with same \code{dtype} as this distribution and shape
able to be added to samples. Should be a whole number. Default \code{NULL}.
If provided, base distribution's \code{prob} should be defined at \code{low}.}

\item{high}{\code{Tensor} with same \code{dtype} as this distribution and shape
able to be added to samples. Should be a whole number. Default \code{NULL}.
If provided, base distribution's \code{prob} should be defined at \code{high - 1}.
\code{high} must be strictly greater than \code{low}.}

\item{validate_args}{Logical, default FALSE. When TRUE distribution parameters are checked
for validity despite possibly degrading runtime performance. When FALSE invalid inputs may
silently render incorrect outputs. Default value: FALSE.}

\item{name}{name prefixed to Ops created by this class.}
}
\description{
Definition in Terms of Sampling
}
\details{
\preformatted{1. Draw X
2. Set Y <-- ceiling(X)
3. If Y < low, reset Y <-- low
4. If Y > high, reset Y <-- high
5. Return Y
}

Definition in Terms of the Probability Mass Function

Given scalar random variable \code{X}, we define a discrete random variable \code{Y}
supported on the integers as follows:\preformatted{ P[Y = j] := P[X <= low],  if j == low,
          := P[X > high - 1],  j == high,
          := 0, if j < low or j > high,
          := P[j - 1 < X <= j],  all other j.
}

Conceptually, without cutoffs, the quantization process partitions the real
line \code{R} into half open intervals, and identifies an integer \code{j} with the
right endpoints:\preformatted{ R = ... (-2, -1](-1, 0](0, 1](1, 2](2, 3](3, 4] ...
 j = ...      -1      0     1     2     3     4  ...
}

\code{P[Y = j]} is the mass of \code{X} within the \code{jth} interval.
If \code{low = 0}, and \code{high = 2}, then the intervals are redrawn
and \code{j} is re-assigned:\preformatted{ R = (-infty, 0](0, 1](1, infty)
 j =          0     1     2
}

\code{P[Y = j]} is still the mass of \code{X} within the \code{jth} interval.

References
\link{1}: Tim Salimans, Andrej Karpathy, Xi Chen, and Diederik P. Kingma.
PixelCNN++: Improving the PixelCNN with discretized logistic mixture
likelihood and other modifications.
International Conference on Learning Representations_, 2017.
https://arxiv.org/abs/1701.05517
\link{2}: Aaron van den Oord et al. Parallel WaveNet: Fast High-Fidelity Speech
Synthesis. \emph{arXiv preprint arXiv:1711.10433}, 2017. https://arxiv.org/abs/1711.10433
}
\seealso{
Other distributions: \code{\link{tfd_bernoulli}},
  \code{\link{tfd_independent}},
  \code{\link{tfd_multivariate_normal_diag}},
  \code{\link{tfd_normal}},
  \code{\link{tfd_one_hot_categorical}},
  \code{\link{tfd_relaxed_bernoulli}},
  \code{\link{tfd_relaxed_one_hot_categorical}},
  \code{\link{tfd_sinh_arcsinh}},
  \code{\link{tfd_student_t_process}},
  \code{\link{tfd_student_t}},
  \code{\link{tfd_transformed}},
  \code{\link{tfd_triangular}},
  \code{\link{tfd_truncated_normal}},
  \code{\link{tfd_uniform}},
  \code{\link{tfd_variational_gaussian_process}},
  \code{\link{tfd_vector_diffeomixture}},
  \code{\link{tfd_vector_exponential_diag}},
  \code{\link{tfd_vector_exponential_linear_operator}},
  \code{\link{tfd_vector_laplace_diag}},
  \code{\link{tfd_vector_laplace_linear_operator}},
  \code{\link{tfd_vector_sinh_arcsinh_diag}},
  \code{\link{tfd_von_mises_fisher}},
  \code{\link{tfd_von_mises}}, \code{\link{tfd_wishart}},
  \code{\link{tfd_zipf}}
}
\concept{distributions}
