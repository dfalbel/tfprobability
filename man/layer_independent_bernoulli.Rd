% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distribution-layers.R
\name{layer_independent_bernoulli}
\alias{layer_independent_bernoulli}
\title{An Independent-Bernoulli Keras layer from `prod(event_shape)` params}
\usage{
layer_independent_bernoulli(object, event_shape,
  convert_to_tensor_fn = tfp$distributions$Distribution$sample,
  sample_dtype = NULL, validate_args = FALSE,
  batch_input_shape = NULL, input_shape = NULL, batch_size = NULL,
  dtype = NULL, name = NULL, trainable = NULL, weights = NULL)
}
\arguments{
\item{event_shape}{Scalar integer representing the size of single draw from this distribution.}

\item{convert_to_tensor_fn}{A callable that takes a `tfd$Distribution` instance and returns a
`tf$Tensor`-like object. Default value: `tfd$Distribution$sample`.}

\item{sample_dtype}{`dtype` of samples produced by this distribution.
Default value: `NULL` (i.e., previous layer's `dtype`).}

\item{validate_args}{Logical, default `FALSE`. When `TRUE` distribution parameters are checked
for validity despite possibly degrading runtime performance. When `FALSE` invalid inputs may
silently render incorrect outputs. Default value: `FALSE`.}
}
\value{
a Keras layer that wraps a Bernoulli distribution
}
\description{
An Independent-Bernoulli Keras layer from `prod(event_shape)` params
}
\seealso{
Other Probabilistic layers (require TensorFlow probability): \code{\link{layer_kl_divergence_add_loss}},
  \code{\link{layer_multivariate_normal_tril}}
}
\concept{Probabilistic layers (require TensorFlow probability)}
