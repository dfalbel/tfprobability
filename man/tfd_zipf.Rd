% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distributions.R
\name{tfd_zipf}
\alias{tfd_zipf}
\title{Zipf distribution.}
\usage{
tfd_zipf(power, dtype = tf$int32, interpolate_nondiscrete = TRUE,
  sample_maximum_iterations = 100, validate_args = FALSE,
  allow_nan_stats = FALSE, name = "Zipf")
}
\arguments{
\item{power}{Float like Tensor representing the power parameter. Must be
strictly greater than 1.}

\item{dtype}{The dtype of Tensor returned by sample. Default value: tf$int32.}

\item{interpolate_nondiscrete}{Logical. When FALSE, log_prob returns
-inf (and prob returns 0) for non-integer inputs. When TRUE,
log_prob evaluates the continuous function \code{-power log(k) -   log(zeta(power))} ,
which matches the Zipf pmf at integer arguments k
(note that this function is not itself a normalized probability  log-density).
Default value: TRUE.}

\item{sample_maximum_iterations}{Maximum number of iterations of allowable
iterations in sample. When validate_args=TRUE, samples which fail to
reach convergence (subject to this cap) are masked out with
\code{self$dtype$min} or nan depending on \code{self$dtype$is_integer}.
Default value: 100.}

\item{validate_args}{Logical, default FALSE. When TRUE distribution parameters are checked
for validity despite possibly degrading runtime performance. When FALSE invalid inputs may
silently render incorrect outputs. Default value: FALSE.}

\item{allow_nan_stats}{Default value: FALSE.}

\item{name}{name prefixed to Ops created by this class.}
}
\description{
The Zipf distribution is parameterized by a power parameter.
}
\seealso{
Other distributions: \code{\link{tfd_bernoulli}},
  \code{\link{tfd_independent}},
  \code{\link{tfd_multivariate_normal_diag}},
  \code{\link{tfd_normal}},
  \code{\link{tfd_one_hot_categorical}},
  \code{\link{tfd_relaxed_bernoulli}},
  \code{\link{tfd_relaxed_one_hot_categorical}},
  \code{\link{tfd_transformed}},
  \code{\link{tfd_truncated_normal}},
  \code{\link{tfd_uniform}},
  \code{\link{tfd_variational_gaussian_process}},
  \code{\link{tfd_vector_diffeomixture}},
  \code{\link{tfd_vector_exponential_diag}},
  \code{\link{tfd_vector_exponential_linear_operator}},
  \code{\link{tfd_vector_laplace_diag}},
  \code{\link{tfd_vector_laplace_linear_operator}},
  \code{\link{tfd_vector_sinh_arcsinh_diag}},
  \code{\link{tfd_von_mises_fisher}},
  \code{\link{tfd_von_mises}}, \code{\link{tfd_wishart}}
}
\concept{distributions}
