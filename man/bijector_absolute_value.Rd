% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bijectors.R
\name{bijector_absolute_value}
\alias{bijector_absolute_value}
\title{Compute `Y = g(X) = Abs(X)`, element-wise.}
\usage{
bijector_absolute_value(validate_args = FALSE, name = "absolute_value")
}
\arguments{
\item{validate_args}{Logical, default `FALSE`. Whether to validate input with asserts. If `validate_args` is
`FALSE`, and the inputs are invalid, correct behavior is not guaranteed.}

\item{name}{name prefixed to Ops created by this class.}
}
\description{
This non-injective bijector allows for transformations of scalar distributions
with the absolute value function, which maps `(-inf, inf)` to `[0, inf)`.
* For `y in (0, inf)`, `AbsoluteValue.inverse(y)` returns the set inverse
`{x in (-inf, inf) : |x| = y}` as a tuple, `-y, y`.
`AbsoluteValue.inverse(0)` returns `0, 0`, which is not the set inverse
(the set inverse is the singleton `{0}`), but "works" in conjunction with
`TransformedDistribution` to produce a left semi-continuous pdf.
For `y < 0`, `AbsoluteValue.inverse(y)` happily returns the wrong thing, `-y, y`.
 This is done for efficiency.  If `validate_args == True`, `y < 0` will raise an exception.
}
