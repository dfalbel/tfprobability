% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bijector-methods.R
\name{inverse_log_det_jacobian.tensorflow_probability.python.bijectors.bijector.Bijector}
\alias{inverse_log_det_jacobian.tensorflow_probability.python.bijectors.bijector.Bijector}
\title{Returns the (log o det o Jacobian o inverse)(y).}
\usage{

  \method{inverse_log_det_jacobian}{tensorflow_probability.python.bijectors.bijector.Bijector}(bijector,
  y, event_ndims, name = "inverse_log_det_jacobian")
}
\arguments{
\item{bijector}{The bijector to apply}

\item{y}{Tensor. The input to the "inverse" Jacobian determinant evaluation.}

\item{event_ndims}{Number of dimensions in the probabilistic events being transformed.
Must be greater than or equal to bijector$inverse_min_event_ndims. The result is summed over the final
dimensions to produce a scalar Jacobian determinant for each event, i.e. it has shape
 x$shape$ndims - event_ndims dimensions.}

\item{name}{The name to give this op.}
}
\value{
ildj: Tensor, if this bijector is injective. If not injective, returns the tuple of local log det
Jacobians, log(det(Dg_i^{-1}(y))), where g_i is the restriction of g to the ith partition Di.
}
\description{
Returns the (log o det o Jacobian o inverse)(y).
}
