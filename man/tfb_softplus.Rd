% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bijectors.R
\name{tfb_softplus}
\alias{tfb_softplus}
\title{Bijector which computes \code{Y = g(X) = Log[1 + exp(X)]}.}
\usage{
tfb_softplus(hinge_softness = NULL, validate_args = FALSE,
  name = "softplus")
}
\arguments{
\item{hinge_softness}{Nonzero floating point Tensor.  Controls the softness of what
would otherwise be a kink at the origin.  Default is 1.0.}

\item{validate_args}{Logical, default FALSE. Whether to validate input with asserts. If validate_args is
FALSE, and the inputs are invalid, correct behavior is not guaranteed.}

\item{name}{name prefixed to Ops created by this class.}
}
\description{
The softplus Bijector has the following two useful properties:
\itemize{
\item The domain is the positive real numbers
\item softplus(x) approx x, for large x, so it does not overflow as easily as the Exp Bijector.
}
}
\details{
The optional nonzero hinge_softness parameter changes the transition at zero.
With hinge_softness = c, the bijector is:
f_c(x) := c * g(x / c) = c * Log\link{1 + exp(x / c)}.
For large x >> 1, c * Log\link{1 + exp(x / c)} approx c * Log\link{exp(x / c)} = x,
so the behavior for large x is the same as the standard softplus.
As c > 0 approaches 0 from the right, f_c(x) becomes less and less soft,
approaching max(0, x).
\itemize{
\item c = 1 is the default.
\item c > 0 but small means f(x) approx ReLu(x) = max(0, x).
\item c < 0 flips sign and reflects around the y-axis: f_{-c}(x) = -f_c(-x).
\item c = 0 results in a non-bijective transformation and triggers an exception.
Note: log(.) and exp(.) are applied element-wise but the Jacobian is a reduction over the event space.
}
}
\seealso{
Other bijectors: \code{\link{masked_autoregressive_default_template}},
  \code{\link{masked_dense}},
  \code{\link{real_nvp_default_template}},
  \code{\link{tfb_absolute_value}},
  \code{\link{tfb_affine_linear_operator}},
  \code{\link{tfb_affine_scalar}},
  \code{\link{tfb_affine}},
  \code{\link{tfb_batch_normalization}},
  \code{\link{tfb_blockwise}}, \code{\link{tfb_chain}},
  \code{\link{tfb_cholesky_outer_product}},
  \code{\link{tfb_cholesky_to_inv_cholesky}},
  \code{\link{tfb_discrete_cosine_transform}},
  \code{\link{tfb_expm1}}, \code{\link{tfb_exp}},
  \code{\link{tfb_fill_triangular}},
  \code{\link{tfb_gumbel}}, \code{\link{tfb_identity}},
  \code{\link{tfb_inline}}, \code{\link{tfb_invert}},
  \code{\link{tfb_kumaraswamy}},
  \code{\link{tfb_masked_autoregressive_flow}},
  \code{\link{tfb_matrix_inverse_tri_l}},
  \code{\link{tfb_matvec_lu}},
  \code{\link{tfb_normal_cdf}}, \code{\link{tfb_ordered}},
  \code{\link{tfb_permute}},
  \code{\link{tfb_power_transform}},
  \code{\link{tfb_real_nvp}}, \code{\link{tfb_reciprocal}},
  \code{\link{tfb_reshape}}, \code{\link{tfb_scale_tri_l}},
  \code{\link{tfb_sigmoid}},
  \code{\link{tfb_sinh_arcsinh}},
  \code{\link{tfb_softmax_centered}},
  \code{\link{tfb_softsign}}, \code{\link{tfb_square}},
  \code{\link{tfb_tanh}},
  \code{\link{tfb_transform_diagonal}},
  \code{\link{tfb_transpose}}, \code{\link{tfb_weibull}}
}
\concept{bijectors}
