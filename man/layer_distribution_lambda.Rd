% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distribution-layers.R
\name{layer_distribution_lambda}
\alias{layer_distribution_lambda}
\title{Keras layer enabling plumbing TFP distributions through Keras models}
\usage{
layer_distribution_lambda(object, make_distribution_fn,
  convert_to_tensor_fn = tfp$distributions$Distribution$sample,
  batch_input_shape = NULL, input_shape = NULL, batch_size = NULL,
  dtype = NULL, name = NULL, trainable = NULL, weights = NULL, ...)
}
\arguments{
\item{object}{Model or layer object}

\item{make_distribution_fn}{A callable that takes previous layer outputs and returns a \code{tfd$distributions$Distribution} instance.}

\item{convert_to_tensor_fn}{A callable that takes a tfd$Distribution instance and returns a
tf$Tensor-like object. Default value: \code{tfd$distributions$Distribution$sample}.}

\item{batch_input_shape}{Shapes, including the batch size. For instance,
\code{batch_input_shape=c(10, 32)} indicates that the expected input will be
batches of 10 32-dimensional vectors. \code{batch_input_shape=list(NULL, 32)}
indicates batches of an arbitrary number of 32-dimensional vectors.}

\item{input_shape}{Dimensionality of the input (integer) not including the
samples axis. This argument is required when using this layer as the first
layer in a model.}

\item{batch_size}{Fixed batch size for layer}

\item{dtype}{The data type expected by the input, as a string (\code{float32},
\code{float64}, \code{int32}...)}

\item{name}{An optional name string for the layer. Should be unique in a
model (do not reuse the same name twice). It will be autogenerated if it
isn't provided.}

\item{trainable}{Whether the layer weights will be updated during training.}

\item{weights}{Initial weights for layer.}

\item{...}{Additional arguments passed to \code{args} of \code{keras::create_layer}.}
}
\description{
Keras layer enabling plumbing TFP distributions through Keras models
}
\seealso{
Other distribution_layers: \code{\link{layer_categorical_mixture_of_one_hot_categorical}},
  \code{\link{layer_independent_bernoulli}},
  \code{\link{layer_kl_divergence_add_loss}},
  \code{\link{layer_kl_divergence_regularizer}},
  \code{\link{layer_multivariate_normal_tri_l}},
  \code{\link{layer_one_hot_categorical}}
}
\concept{distribution_layers}
